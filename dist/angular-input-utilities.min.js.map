{"version":3,"sources":["alphaNumericOnly/alpha-numeric-only.js","checkbox-list/checkbox-list-dx.js","clearInput/clear-input.js","focusOnStateLoad/focusOnStateLoad-dx.js","multi-select-row/multi-select-row-dx.js","multi-select-row/unique-anchor-service.js","posIntegerOnly/pos-int-only.js","saveButton/save-button-dx.js","selectAllOnFocus/selectAllOnFocus-dx.js","close-icon/close-icon-dx.js","typeAhead/type-ahead-dx.js","typeahead-select/typeahead-select-dx.js","ngtemplates.js"],"names":["angular","module","directive","$parse","restrict","require","link","scope","iElement","iAttrs","$watch","ngModel","value","oldValue","newValue","toString","replace","assign","controller","controllerAs","bindToController","templateUrl","items","isHierarchical","$filter","hierarchyCheck","selected","index","i","checkboxList","length","validationCheck","valid","forEach","item","this","validationChecker","$compile","$timeout","linker","element","attrs","ngModelCtrl","template","after","css","reset","$setViewValue","$render","uiDate","focus","bind","enabled","$viewValue","$apply","parent","$","UniqueAnchor","multiSelectAttributes","dynamicAttributes","rowTitle","multiSelectTitle","removeFromSelectedCb","multiSelectRow","anchor","getUniqueAnchor","find","attr","copy","$anchorScroll","$location","$scope","$q","removeOptionFromSelectList","id","indexToRemove","selectedOptions","selectedOption","undefined","splice","getSelectedOptionText","options","_","findWhere","label","goToOptions","newHash","hash","extraSettings","translationTexts","events","multiSelectDynamicAttr","when","then","dynamicAttr","selectedModel","anchorNum","factory","isNaN","numberValidation","parseInt","slice","unsavedChangesTrigger","saveFn","save","saveButton","savingChangesTrigger","response","on","select","showUncloseIcon","closeTitle","uncloseTitle","setupElements","typeAheadBox","is","showBox","$modelValue","nv","ov","queryFn","data","$document","$window","$rootScope","$position","typeaheadParser","HOT_KEYS","eventDebounceTime","originalScope","modelCtrl","fireRecalculating","moveInProgress","$digest","timeoutEventPromise","cancel","matches","recalculatePosition","position","appendToBody","offset","top","prop","minLength","$eval","typeaheadMinLength","hasFocus","waitTime","typeaheadWaitMs","isEditable","typeaheadEditable","isLoadingSetter","typeaheadLoading","noop","onSelectCallback","typeaheadOnSelect","isSelectOnBlur","isDefined","typeaheadSelectOnBlur","inputFormatter","typeaheadInputFormatter","typeaheadAppendToBody","focusFirst","typeaheadFocusFirst","$setModelValue","parserResult","parse","typeaheadSelect","$new","$on","$destroy","popupId","$id","Math","floor","random","aria-autocomplete","aria-expanded","aria-owns","popUpEl","active","move-in-progress","query","typeaheadTemplateUrl","resetMatches","activeIdx","getMatchId","removeAttr","getMatchesAsync","inputValue","locals","source","onCurrentRequest","itemName","push","viewMapper","model","timeoutPromise","scheduleSearchWithTimeout","cancelPreviousTimeout","$parsers","unshift","$setValidity","$formatters","modelValue","candidateViewValue","emptyViewValue","$model","modelMapper","$item","$label","evt","indexOf","which","preventDefault","stopPropagation","dismissClickHandler","target","$$phase","unbind","$popup","remove","append","run","$templateCache","put"],"mappings":"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","file":"angular-input-utilities.min.js","sourcesContent":["/**\n * Created by ericjohndixon on 2/18/16.\n */\n'use strict';\n\nangular.module('angular-input-utilities',[])\n    .directive('alphaNumericOnly', function ($parse) {\n        return {\n            restrict: 'A',\n            require: 'ngModel',\n            link: function (scope, iElement, iAttrs) {\n                scope.$watch(iAttrs.ngModel, function (value, oldValue) {\n                    //The use can remove the number so it's null or enter a 0 so return\n                    if (value === 0 || value === null && typeof value !== 'undefined') {\n                        return;\n                    }\n                    var newValue =(value) ? value.toString().replace(/\\W/g, '') : '';\n                    $parse(iAttrs.ngModel).assign(scope, newValue);\n                });\n            }\n        };\n    });\n","/**\n * Created by ericjohndixon on 8/4/15.\n */\n(function () {\n  'use strict';\n\n  angular.module('angular-input-utilities')\n    .directive('checkboxList', [function () {\n      return {\n          restrict: 'E',\n          controller: 'CheckboxListCtrl',\n          controllerAs: 'checkboxList',\n          bindToController: true,\n          templateUrl: 'src/checkbox-list/checkbox-list-tpl.html',\n          scope: {\n              items: '=items',\n              isHierarchical: '=isHierarchical'\n          }\n      };\n    }])\n      .controller('CheckboxListCtrl', ['$filter', function($filter){\n          var checkboxList = this;\n          checkboxList.hierarchyCheck = hierarchyCheck;\n          //checkboxList.validationCheck = validationCheck;\n          checkboxList.valid = '';\n          checkboxList.validationChecker = validationCheck;\n          //checkboxList.orderedItems = checkboxList.items;\n              //$filter('orderBy')(checkboxList.items, 'description');\n\n\n          function hierarchyCheck(selected, index) {\n              var i;\n              if (selected) {\n                  for (i = index; i >= 0; i--) {\n                      checkboxList.items[i].selected = true;\n                  }\n              } else {\n                  for (i = index; i < checkboxList.items.length; i++) {\n                      checkboxList.items[i].selected = false;\n                  }\n              }\n          }\n\n\n          function validationCheck() {\n              var valid = null;\n              angular.forEach(checkboxList.items, function(item) {\n                  if(item.selected) {\n                      valid = true;\n                  }\n              });\n              checkboxList.valid = valid;\n              return true;\n          }\n      }]);\n})();\n","/**\n * Created by ericjohndixon on 5/12/15.\n */\n(function () {\n  \"use strict\";\n\n  // directive attribute that is used to add a clear button to input elements\n  angular.module('angular-input-utilities')\n    .directive('clearInput', ['$compile', '$timeout', function ($compile, $timeout) {\n      return {\n        restrict: 'A',\n        link: linker,\n        require: 'ngModel'\n      };\n\n      ////////////////////////////////////////////////////\n      function linker(scope, element, attrs, ngModelCtrl) {\n          var template = $compile('<i ng-show=\"enabled\" ng-mousedown=\"reset()\" class=\"clear-input fa fa-close show-hide\"></i>')(scope);\n          element.after(template);\n\n          //accounts for any html 5 stuff that could be on the far right\n          element.css('padding-right', '25px');\n\n          scope.reset = function () {\n              ngModelCtrl.$setViewValue('');\n              ngModelCtrl.$render();\n              if (!attrs.uiDate) {\n                  $timeout(function () {\n                      element[0].focus();\n                  }, 0, false);\n              }\n          };\n          element.bind('mouseenter', function () {\n              scope.enabled = (ngModelCtrl.$viewValue !== null && ngModelCtrl.$viewValue !== '');\n              scope.$apply();\n          });\n          element.parent().bind('mouseleave', function () {\n              scope.enabled = false;\n              scope.$apply();\n          });\n          //element.parent().bind('focusout', function () {\n          //  if(!attrs.uiDate) {\n          //    scope.enabled = false;\n          //      if(!scope.$$phase) {\n          //          scope.$apply();\n          //      }\n          //  }\n          //});\n\n          element.bind('input', function () {\n              scope.enabled = (ngModelCtrl.$viewValue !== null && ngModelCtrl.$viewValue !== '');\n          });\n\n      }\n\n    }])\n})();\n","/**\n * Created by ericjohndixon on 9/21/15.\n */\n(function () {\n  'use strict';\n\n  angular.module('angular-input-utilities')\n    .directive('focusOnStateLoad', [function () {\n      return {\n        restrict: 'A',\n        link: linker\n      };\n\n      ////////////////////////////////////////////////////\n      function linker(scope, element, attrs) {\n        $(element).focus();\n      }\n\n    }]);\n})();\n","/**\n * Created by ericjohndixon on 10/8/15.\n */\n(function () {\n  'use strict';\n\n  angular.module('angular-input-utilities')\n    .directive('multiSelectRow', ['UniqueAnchor', function (UniqueAnchor) {\n      return {\n          restrict: 'E',\n          controller: 'MultiSelectRowCtrl',\n          controllerAs: 'multiSelectRow',\n          templateUrl: 'src/multi-select-row/multi-select-row-tpl.html',\n          bindToController: true,\n          scope: {\n              multiSelectAttributes: '=multiSelectAttributes',\n              dynamicAttributes: '=dynamicAttributes',\n              rowTitle : '@rowTitle',\n              multiSelectTitle : '@multiSelectTitle',\n              removeFromSelectedCb: '=removeFromSelectedCb'\n          },\n          link : function linker(scope, element, attrs) {\n              scope.multiSelectRow.anchor = UniqueAnchor.getUniqueAnchor();\n              $(element).find('.dropdown-menu').attr('id', angular.copy(scope.multiSelectRow.anchor));\n          }\n      };\n    }])\n    .controller('MultiSelectRowCtrl', ['$anchorScroll', '$location', '$scope', '$q', function($anchorScroll, $location, $scope, $q) {\n        var multiSelectRow = this;\n          multiSelectRow.getSelectedOptionText = getSelectedOptionText;\n          multiSelectRow.removeOptionFromSelectList = removeOptionFromSelectList;\n          multiSelectRow.selectedOptions = [];\n          multiSelectRow.goToOptions = goToOptions;\n\n          //non-dynamic multiselect options\n          multiSelectRow.extraSettings = multiSelectRow.multiSelectAttributes.extraSettings;\n          multiSelectRow.translationTexts = multiSelectRow.multiSelectAttributes.translationTexts;\n          multiSelectRow.events = multiSelectRow.multiSelectAttributes.events;\n\n          // need to use a promise for the dynamically loaded attribute.\n          var multiSelectDynamicAttr = $q.when(multiSelectRow.dynamicAttributes);\n          multiSelectDynamicAttr.then(function(dynamicAttr){\n              multiSelectRow.options = dynamicAttr.options;\n              multiSelectRow.selectedOptions = dynamicAttr.selectedModel;\n          });\n\n\n          function removeOptionFromSelectList(id) {\n              var indexToRemove;\n              angular.forEach(multiSelectRow.selectedOptions, function(selectedOption, index) {\n                 if (selectedOption.id == id) {\n                     indexToRemove = index;\n                 }\n              });\n              if (indexToRemove !== undefined) {\n                  multiSelectRow.selectedOptions.splice(indexToRemove, 1);\n              }\n              if(multiSelectRow.removeFromSelectedCb) {\n                  multiSelectRow.removeFromSelectedCb({id: id});\n              }\n          }\n\n          function getSelectedOptionText(id) {\n              if(multiSelectRow.options) {\n                  var selectedOption = _.findWhere(multiSelectRow.options, {id: id});\n                  return (selectedOption) ? selectedOption.label : '';\n              }\n          }\n\n          // when the options go beyond the scrollable area, this will scroll to show all options\n          function goToOptions() {\n              var newHash = multiSelectRow.anchor;\n              if ($location.hash() !== newHash) {\n                  // set the $location.hash to `newHash` and\n                  // $anchorScroll will automatically scroll to it\n                  $location.hash(multiSelectRow.anchor);\n              } else {\n                  // call $anchorScroll() explicitly,\n                  // since $location.hash hasn't changed\n                  $anchorScroll();\n              }\n          }\n    }]);\n})();\n","/**\n * Created by ericjohndixon on 10/8/15.\n */\n(function () {\n    'use strict';\n\n    angular\n        .module('angular-input-utilities')\n        .factory('UniqueAnchor', UniqueAnchor);\n    //UniqueAnchor.$inject = [''];\n\n    //FACTORY METHOD\n    function UniqueAnchor() {\n        var anchorNum = 0;\n        return {\n            getUniqueAnchor : getUniqueAnchor\n        };\n        /////////////////////////////////////////////////////////\n        function getUniqueAnchor() {\n            return 'anchor' + anchorNum++;\n        }\n    }\n})();\n","/**\n * Created by ericjohndixon on 10/30/15.\n */\n'use strict';\n\nangular.module('angular-input-utilities')\n    .directive('posIntOnly', function ($parse) {\n        return {\n            restrict: 'A',\n            require: 'ngModel',\n            link: function (scope, iElement, iAttrs) {\n                scope.$watch(iAttrs.ngModel, function (value, oldValue) {\n                    //The use can remove the number so it's null or enter a 0 so return\n                    if (value === 0 || value === null && typeof value !== 'undefined') {\n                        return;\n                    }\n                    //The user entered a character so value is undefined\n                    if (!value || isNaN(value)) {\n                        if(value !== '' && value !== undefined && value !== null) {\n                            $parse(iAttrs.ngModel).assign(scope, oldValue);\n                        }\n                        return;\n                    }\n\n                    //If you don't have the type of input set to number then this will get hit otherwise it will never hit this\n                    var newValue = (iAttrs.numberValidation === 'rank') ? parseInt(value.toString().replace(/[^0-9]/g, '').slice(0, 2)) : parseInt(value.toString().replace(/[^0-9]/g), '');\n                    $parse(iAttrs.ngModel).assign(scope, newValue);\n                });\n            }\n        };\n    });\n","/**\n * Created by ericjohndixon on 9/8/15.\n */\n(function () {\n  'use strict';\n\n  angular.module('angular-input-utilities')\n    .directive('saveButton', [function () {\n          return {\n              restrict: 'E',\n              controller: 'SaveButtonCtrl',\n              controllerAs: 'saveButton',\n              templateUrl: 'src/saveButton/save-button-tpl.html',\n              scope: {\n                  unsavedChangesTrigger : '=unsavedChangesTrigger',\n                  saveFn : '=saveFn'\n              },\n              bindToController: true\n          };\n      }])\n    .controller('SaveButtonCtrl', [function() {\n        var saveButton = this;\n        saveButton.save = save;\n\n        function save() {\n            saveButton.savingChangesTrigger = true;\n            saveButton.saveFn().then(function(response) {\n                saveButton.savingChangesTrigger = false;\n                return response;\n            });\n        }\n\n\n    }]);\n})();\n","/**\n * Created by ericjohndixon on 9/23/15.\n */\n(function () {\n  'use strict';\n\n  angular.module('angular-input-utilities')\n    .directive('selectAllOnFocus', [function () {\n      return {\n        restrict: 'A',\n        link: linker\n      };\n\n      ////////////////////////////////////////////////////\n      function linker(scope, element, attrs) {\n        $(element).on('click', function(){\n            $(this).select();\n        });\n      }\n\n    }]);\n})();\n","/**\n * Created by ericjohndixon on 8/10/15.\n */\n(function () {\n    'use strict';\n    //'<i ng-if=\"showUncloseIcon\" class=\"lds-icon unclose-icon lds-icon-dont\"></i>' +\n    angular.module('angular-input-utilities')\n        .directive('closeIcon', [function () {\n            return {\n                restrict: 'E',\n                scope: {\n                    showUncloseIcon: '=showUncloseIcon',\n                    closeTitle: '@closeTitle',\n                    uncloseTitle: '@uncloseTitle'\n                },\n                template: '<div class=\"close-icon-group\" tooltip-popup-delay=\"1000\" tooltip-append-to-body=\"true\" tooltip=\"{{(showUncloseIcon) ? uncloseTitle : closeTitle}}\">' +\n                '<i class=\"fa fa-close close-icon\" ng-class=\"{\\'un-close-icon\\' : showUncloseIcon}\"></i> ' +\n                '</div>'\n            };\n        }]);\n})();\n","/**\n * Created by ericjohndixon on 8/28/15.\n */\n(function () {\n  'use strict';\n\n  angular.module('angular-input-utilities')\n    .directive('utilTypeAhead', ['$compile', function ($compile) {\n          return {\n              restrict: 'A',\n              link: linker,\n              require: '^ngModel',\n              scope: {\n                  queryFn : '=queryFn'\n              }\n          };\n\n      ////////////////////////////////////////////////////\n      function linker(scope, element, attrs, ngModelCtrl) {\n\n          var typeAheadBox = angular.element('<div id=\"typeAheadBox\" class=\"type-ahead-box show-hide ng-hide\" ng-show=\"showBox\"><div ng-repeat=\"item in items\"> <div>{{item.unitWard}}</div></div></div>');\n\n          scope.showBox = false;\n          setupElements();\n\n          // initial creation of elements\n          function setupElements() {\n              element.after(typeAheadBox);\n              $compile(typeAheadBox)(scope);\n\n              $('html').bind('click',function() {\n                  if(!$('#typeAheadBox').is(':active')) {\n                      scope.$apply(function () {\n                          scope.showBox = false;\n                      });\n                  }\n              });\n              angular.element(element).bind('blur', function () {\n                  if(!$('#typeAheadBox').is(':active')) {\n                      scope.$apply(function () {\n                          scope.showBox = false;\n                      });\n                  }\n              });\n\n              angular.element(typeAheadBox).bind('blur', function () {\n                  scope.$apply(function () {\n                      scope.showBox = false;\n                  });\n              });\n\n              scope.$watch(function() {\n                  return ngModelCtrl.$modelValue;\n              }, function(nv, ov) {\n                  if(nv) {\n                      scope.queryFn(nv).then(function(data){\n                          scope.items = data;\n                      });\n                      scope.showBox = true;\n                  } else {\n                      scope.showBox = false;\n                  }\n              });\n          }\n      }\n\n    }]);\n})();\n","/**\n * Created by ericjohndixon on 10/5/15.\n */\n(function(){\n    angular.module('angular-input-utilities')\n        .directive('typeaheadSelect', ['$compile', '$parse', '$q', '$timeout', '$document', '$window', '$rootScope', '$position', 'typeaheadParser',\n        function ($compile, $parse, $q, $timeout, $document, $window, $rootScope, $position, typeaheadParser) {\n\n            var HOT_KEYS = [9, 13, 27, 38, 40];\n            var eventDebounceTime = 200;\n\n            return {\n                require:'ngModel',\n                link:function (originalScope, element, attrs, modelCtrl) {\n\n                    //SUPPORTED ATTRIBUTES (OPTIONS)\n\n                    //minimal no of characters that needs to be entered before typeahead kicks-in\n                    var minLength = originalScope.$eval(attrs.typeaheadMinLength);\n                    if (!minLength && minLength !== 0) {\n                        minLength = 1;\n                    }\n\n                    //minimal wait time after last character typed before typeahead kicks-in\n                    var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n                    //should it restrict model values to the ones selected from the popup only?\n                    var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n\n                    //binding to a variable that indicates if matches are being retrieved asynchronously\n                    var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n                    //a callback executed when a match is selected\n                    var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n                    //should it select highlighted popup value when losing focus?\n                    var isSelectOnBlur = angular.isDefined(attrs.typeaheadSelectOnBlur) ? originalScope.$eval(attrs.typeaheadSelectOnBlur) : false;\n\n                    var inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : undefined;\n\n                    var appendToBody =  attrs.typeaheadAppendToBody ? originalScope.$eval(attrs.typeaheadAppendToBody) : false;\n\n                    var focusFirst = originalScope.$eval(attrs.typeaheadFocusFirst) !== false;\n\n                    //INTERNAL VARIABLES\n\n                    //model setter executed upon match selection\n                    var $setModelValue = $parse(attrs.ngModel).assign;\n\n                    //expressions used by typeahead\n                    var parserResult = typeaheadParser.parse(attrs.typeaheadSelect);\n\n                    var hasFocus;\n\n                    //Used to avoid bug in iOS webview where iOS keyboard does not fire\n                    //mousedown & mouseup events\n                    //Issue #3699\n                    var selected;\n\n                    //create a child scope for the typeahead directive so we are not polluting original scope\n                    //with typeahead-specific data (matches, query etc.)\n                    var scope = originalScope.$new();\n                    originalScope.$on('$destroy', function(){\n                        scope.$destroy();\n                    });\n\n                    // WAI-ARIA\n                    var popupId = 'typeahead-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n                    element.attr({\n                        'aria-autocomplete': 'list',\n                        'aria-expanded': false,\n                        'aria-owns': popupId\n                    });\n\n                    //pop-up element used to display matches\n                    var popUpEl = angular.element('<div typeahead-popup></div>');\n                    popUpEl.attr({\n                        id: popupId,\n                        matches: 'matches',\n                        active: 'activeIdx',\n                        select: 'select(activeIdx)',\n                        'move-in-progress': 'moveInProgress',\n                        query: 'query',\n                        position: 'position'\n                    });\n                    //custom item template\n                    if (angular.isDefined(attrs.typeaheadTemplateUrl)) {\n                        popUpEl.attr('template-url', attrs.typeaheadTemplateUrl);\n                    }\n\n                    var resetMatches = function() {\n                        scope.matches = [];\n                        scope.activeIdx = -1;\n                        element.attr('aria-expanded', false);\n                    };\n\n                    var getMatchId = function(index) {\n                        return popupId + '-option-' + index;\n                    };\n\n                    // Indicate that the specified match is the active (pre-selected) item in the list owned by this typeahead.\n                    // This attribute is added or removed automatically when the `activeIdx` changes.\n                    scope.$watch('activeIdx', function(index) {\n                        if (index < 0) {\n                            element.removeAttr('aria-activedescendant');\n                        } else {\n                            element.attr('aria-activedescendant', getMatchId(index));\n                        }\n                    });\n\n                    var getMatchesAsync = function(inputValue) {\n\n                        var locals = {$viewValue: inputValue};\n                        isLoadingSetter(originalScope, true);\n                        $q.when(parserResult.source(originalScope, locals)).then(function(matches) {\n\n                            //it might happen that several async queries were in progress if a user were typing fast\n                            //but we are interested only in responses that correspond to the current view value\n                            var onCurrentRequest = (inputValue === modelCtrl.$viewValue);\n                            if (onCurrentRequest && hasFocus) {\n                                if (matches && matches.length > 0) {\n\n                                    scope.activeIdx = focusFirst ? 0 : -1;\n                                    scope.matches.length = 0;\n\n                                    //transform labels\n                                    for(var i=0; i<matches.length; i++) {\n                                        locals[parserResult.itemName] = matches[i];\n                                        scope.matches.push({\n                                            id: getMatchId(i),\n                                            label: parserResult.viewMapper(scope, locals),\n                                            model: matches[i]\n                                        });\n                                    }\n\n                                    scope.query = inputValue;\n                                    //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n                                    //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n                                    //due to other elements being rendered\n                                    recalculatePosition();\n\n                                    element.attr('aria-expanded', true);\n                                } else {\n                                    resetMatches();\n                                }\n                            }\n                            if (onCurrentRequest) {\n                                isLoadingSetter(originalScope, false);\n                            }\n                        }, function(){\n                            resetMatches();\n                            isLoadingSetter(originalScope, false);\n                        });\n                    };\n\n                    // bind events only if appendToBody params exist - performance feature\n                    if (appendToBody) {\n                        angular.element($window).bind('resize', fireRecalculating);\n                        $document.find('body').bind('scroll', fireRecalculating);\n                    }\n\n                    // Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n                    var timeoutEventPromise;\n\n                    // Default progress type\n                    scope.moveInProgress = false;\n\n                    function fireRecalculating() {\n                        if(!scope.moveInProgress){\n                            scope.moveInProgress = true;\n                            scope.$digest();\n                        }\n\n                        // Cancel previous timeout\n                        if (timeoutEventPromise) {\n                            $timeout.cancel(timeoutEventPromise);\n                        }\n\n                        // Debounced executing recalculate after events fired\n                        timeoutEventPromise = $timeout(function () {\n                            // if popup is visible\n                            if (scope.matches.length) {\n                                recalculatePosition();\n                            }\n\n                            scope.moveInProgress = false;\n                            scope.$digest();\n                        }, eventDebounceTime);\n                    }\n\n                    // recalculate actual position and set new values to scope\n                    // after digest loop is popup in right position\n                    function recalculatePosition() {\n                        scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n                        scope.position.top += element.prop('offsetHeight');\n                    }\n\n                    resetMatches();\n\n                    //we need to propagate user's query so we can higlight matches\n                    scope.query = undefined;\n\n                    //Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n                    var timeoutPromise;\n\n                    var scheduleSearchWithTimeout = function(inputValue) {\n                        timeoutPromise = $timeout(function () {\n                            getMatchesAsync(inputValue);\n                        }, waitTime);\n                    };\n\n                    var cancelPreviousTimeout = function() {\n                        if (timeoutPromise) {\n                            $timeout.cancel(timeoutPromise);\n                        }\n                    };\n\n                    element.bind('click', function(){\n                        hasFocus = true;\n                        scheduleSearchWithTimeout('');\n                    });\n                    //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n                    //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n                    modelCtrl.$parsers.unshift(function (inputValue) {\n\n                        hasFocus = true;\n\n                        if (minLength === 0 || inputValue.length >= minLength) {\n                            if (waitTime > 0) {\n                                cancelPreviousTimeout();\n                                scheduleSearchWithTimeout(inputValue);\n                            } else {\n                                getMatchesAsync(inputValue);\n                            }\n                        } else {\n                            isLoadingSetter(originalScope, false);\n                            cancelPreviousTimeout();\n                            resetMatches();\n                        }\n\n                        if (isEditable) {\n                            return inputValue;\n                        } else {\n                            if (!inputValue) {\n                                // Reset in case user had typed something previously.\n                                modelCtrl.$setValidity('editable', true);\n                                return inputValue;\n                            } else {\n                                modelCtrl.$setValidity('editable', false);\n                                return undefined;\n                            }\n                        }\n                    });\n\n                    modelCtrl.$formatters.push(function (modelValue) {\n\n                        var candidateViewValue, emptyViewValue;\n                        var locals = {};\n\n                        // The validity may be set to false via $parsers (see above) if\n                        // the model is restricted to selected values. If the model\n                        // is set manually it is considered to be valid.\n                        if (!isEditable) {\n                            modelCtrl.$setValidity('editable', true);\n                        }\n\n                        if (inputFormatter) {\n\n                            locals.$model = modelValue;\n                            return inputFormatter(originalScope, locals);\n\n                        } else {\n\n                            //it might happen that we don't have enough info to properly render input value\n                            //we need to check for this situation and simply return model value if we can't apply custom formatting\n                            locals[parserResult.itemName] = modelValue;\n                            candidateViewValue = parserResult.viewMapper(originalScope, locals);\n                            locals[parserResult.itemName] = undefined;\n                            emptyViewValue = parserResult.viewMapper(originalScope, locals);\n\n                            return candidateViewValue!== emptyViewValue ? candidateViewValue : modelValue;\n                        }\n                    });\n\n                    scope.select = function (activeIdx) {\n                        //called from within the $digest() cycle\n                        var locals = {};\n                        var model, item;\n\n                        selected = true;\n                        locals[parserResult.itemName] = item = scope.matches[activeIdx].model;\n                        model = parserResult.modelMapper(originalScope, locals);\n                        $setModelValue(originalScope, model);\n                        modelCtrl.$setValidity('editable', true);\n                        modelCtrl.$setValidity('parse', true);\n\n                        onSelectCallback(originalScope, {\n                            $item: item,\n                            $model: model,\n                            $label: parserResult.viewMapper(originalScope, locals)\n                        });\n\n                        resetMatches();\n\n                        //return focus to the input element if a match was selected via a mouse click event\n                        // use timeout to avoid $rootScope:inprog error\n                        $timeout(function() { element[0].focus(); }, 0, false);\n                    };\n\n                    //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n                    element.bind('keydown', function (evt) {\n\n                        //typeahead is open and an \"interesting\" key was pressed\n                        if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n                            return;\n                        }\n\n                        // if there's nothing selected (i.e. focusFirst) and enter is hit, don't do anything\n                        if (scope.activeIdx === -1 && evt.which === 13) {\n                            return;\n                        }\n\n                        // if there's nothing selected (i.e. focusFirst) and tab is hit, clear the results\n                        if (scope.activeIdx === -1 && evt.which === 9) {\n                            resetMatches();\n                            scope.$digest();\n                            return;\n                        }\n\n                        evt.preventDefault();\n\n                        if (evt.which === 40) {\n                            scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n                            scope.$digest();\n\n                        } else if (evt.which === 38) {\n                            scope.activeIdx = (scope.activeIdx > 0 ? scope.activeIdx : scope.matches.length) - 1;\n                            scope.$digest();\n\n                        } else if (evt.which === 13 || evt.which === 9) {\n                            scope.$apply(function () {\n                                scope.select(scope.activeIdx);\n                            });\n\n                        } else if (evt.which === 27) {\n                            evt.stopPropagation();\n\n                            resetMatches();\n                            scope.$digest();\n                        }\n                    });\n\n                    element.bind('blur', function () {\n                        if (isSelectOnBlur && scope.matches.length && scope.activeIdx !== -1 && !selected) {\n                            selected = true;\n                            scope.$apply(function () {\n                                scope.select(scope.activeIdx);\n                            });\n                        }\n                        hasFocus = false;\n                        selected = false;\n                    });\n\n                    // Keep reference to click handler to unbind it.\n                    var dismissClickHandler = function (evt) {\n                        // Issue #3973\n                        // Firefox treats right click as a click on document\n                        if (element[0] !== evt.target && evt.which !== 3) {\n                            resetMatches();\n                            if (!$rootScope.$$phase) {\n                                scope.$digest();\n                            }\n                        }\n                    };\n\n                    $document.bind('click', dismissClickHandler);\n\n                    originalScope.$on('$destroy', function(){\n                        $document.unbind('click', dismissClickHandler);\n                        if (appendToBody) {\n                            $popup.remove();\n                        }\n                        // Prevent jQuery cache memory leak\n                        popUpEl.remove();\n                    });\n\n                    var $popup = $compile(popUpEl)(scope);\n\n                    if (appendToBody) {\n                        $document.find('body').append($popup);\n                    } else {\n                        element.after($popup);\n                    }\n                }\n            };\n\n        }])\n})();\n","angular.module(\"angular-input-utilities\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"src/checkbox-list/checkbox-list-tpl.html\",\"<div class=\\\"checkbox-list\\\">\\n    <div ng-if=\\\"checkboxList.isHierarchical\\\" style=\\\"font-size: 13px\\\" class=\\\"hide-on-disabled\\\">(Restrictions are listed in hierarchical order. If a lower level restriction is selected, all higher level restrictions must also be selected.)</div>\\n    <div class=\\\"checkbox\\\" ng-repeat=\\\"item in checkboxList.items track by $index\\\">\\n        <input\\n            id=\\\"restriction-{{$parent.$index+\\'-\\'+$index}}\\\"\\n            name=\\\"restriction-{{$index}}\\\"\\n            type=\\\"checkbox\\\" ng-change=\\\"(checkboxList.isHierarchical) ? checkboxList.hierarchyCheck(item.selected, $index) : \\'\\'\\\"\\n            ng-model=\\\"item.selected\\\">\\n        <label>{{item.description}}</label>\\n    </div>\\n\\n    <!--hidden input for validation purposes-->\\n    <select class=\\\"validation-checkbox\\\"\\n            name=\\\"field_validation\\\"\\n            required\\n            title=\\\"(Check at least one box.)\\\"\\n            ng-show=\\\"checkboxList.validationChecker()\\\"\\n            ng-options=\\\"item.id as item.description for item in [{id: 1, description: \\'\\'}]\\\"\\n            ng-model=\\\"checkboxList.valid\\\"></select>\\n</div>\\n\");\n$templateCache.put(\"src/multi-select-row/multi-select-row-tpl.html\",\"<div class=\\\"row multi-select-row\\\">\\n    <div class=\\\"col-xs-10 row-item-data\\\">\\n        <div class=\\\"heading-6\\\" style=\\\"margin-bottom: 5px\\\">{{multiSelectRow.rowTitle}}</div>\\n        <p ng-repeat=\\\"selectedOption in multiSelectRow.selectedOptions\\\">\\n            <close-icon id=\\\"removeMultiSelectionItem-{{$index}}\\\" class=\\\"close-icon\\\"\\n                        ng-click=\\\"multiSelectRow.removeOptionFromSelectList(selectedOption.id)\\\"></close-icon>\\n            <span id=\\\"multiSelectedItemsText-{{$index}}\\\" class=\\\"row-item-data-text\\\">{{multiSelectRow.getSelectedOptionText(selectedOption.id)}}</span>\\n        </p>\\n        <p class=\\\"noneSelected\\\" ng-if=\\\"multiSelectRow.selectedOptions.length == 0\\\">\\n            <strong>None selected</strong>\\n        </p>\\n    </div>\\n    <div class=\\\"col-xs-2 multi-select-col\\\">\\n        <div class=\\\"multi-select-group\\\">\\n            <div class=\\\"multi-select-label\\\">{{multiSelectRow.multiSelectTitle}}</div>\\n            <div ng-dropdown-multiselect\\n                 ng-click=\\\"multiSelectRow.goToOptions()\\\"\\n                 options=\\\"multiSelectRow.options\\\"\\n                 events = \\\"multiSelectRow.events\\\"\\n                 selected-model=\\\"multiSelectRow.selectedOptions\\\"\\n                 extra-settings=\\\"multiSelectRow.extraSettings\\\"\\n                 translation-texts=\\\"multiSelectRow.translationTexts\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"src/saveButton/save-button-tpl.html\",\"<span class=\\\"save-btn\\\">\\n    <button class=\\\"btn btn-with-icon\\\" id=\\\"the-save-btn\\\"\\n            type=\\\"submit\\\"\\n            ng-click=\\\"saveButton.save()\\\"\\n            ng-class=\\\"{ \\'btn-success\\' : !saveButton.savingChangesTrigger && !saveButton.unsavedChangesTrigger,\\n                        \\'btn-warning\\' : saveButton.unsavedChangesTrigger && !saveButton.savingChangesTrigger,\\n                        \\'btn-danger-hover\\' : saveButton.savingChangesTrigger}\\\"\\n            ng-disabled=\\\"!saveButton.unsavedChangesTrigger\\\">\\n\\n        <!--SAVING-->\\n        <div ng-if=\\\"saveButton.savingChangesTrigger\\\">\\n            <div class=\\\"save-btn__spinner\\\" ><util-spinner class-name=\\\"btn-loading-beacon\\\"></util-spinner></div>\\n            <div class=\\\"save-btn__saving\\\">Saving Changes</div>\\n        </div>\\n\\n        <!--ALL CHANGES UP TO DATE-->\\n        <span ng-if=\\\"!saveButton.savingChangesTrigger && !saveButton.unsavedChangesTrigger\\\"><i class=\\\"lds-icon lds-icon-check\\\"></i> Changes are up to date</span>\\n\\n        <!--UNSAVED CHANGES-->\\n        <span ng-if=\\\"saveButton.unsavedChangesTrigger && !saveButton.savingChangesTrigger\\\"><i class=\\\"lds-icon lds-icon-warning\\\"></i>Save Changes</span>\\n    </button>\\n    saving: {{saveButton.savingChangesTrigger}}\\n</span>\\n\");}]);"],"sourceRoot":"/source/"}